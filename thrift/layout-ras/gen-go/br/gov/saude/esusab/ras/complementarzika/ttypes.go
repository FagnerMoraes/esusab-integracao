// Autogenerated by Thrift Compiler (0.9.3)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package complementarzika

import (
	"br/gov/saude/esusab/ras/common"
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = common.GoUnusedProtection__
var GoUnusedProtection__ int

// Attributes:
//  - HeaderTransport
//  - UuidFicha
//  - TpCdsOrigem
//  - Turno
//  - CnsCidadao
//  - CnsResponsavelFamiliar
//  - DataRealizacaoTesteOlhinho
//  - CoResultadoTesteOlhinho
//  - DataRealizacaoExameFundoOlho
//  - CoResultadoExameFundoOlho
//  - DataRealizacaoTesteOrelhinha
//  - CoResultadoTesteOrelhinha
//  - DataRealizacaoUSTransfontanela
//  - CoResultadoUsTransfontanela
//  - DataRealizacaoTomografiaComputadorizada
//  - CoResultadoTomografiaComputadorizada
//  - DataRealizacaoRessonanciaMagnetica
//  - CoResultadoRessonanciaMagnetica
//  - CpfCidadao
//  - CpfResponsavelFamiliar
type FichaComplementarZikaMicrocefaliaThrift struct {
	HeaderTransport                         *common.UnicaLotacaoHeaderThrift `thrift:"headerTransport,1" json:"headerTransport,omitempty"`
	UuidFicha                               string                           `thrift:"uuidFicha,2,required" json:"uuidFicha"`
	TpCdsOrigem                             *int32                           `thrift:"tpCdsOrigem,3" json:"tpCdsOrigem,omitempty"`
	Turno                                   *int64                           `thrift:"turno,4" json:"turno,omitempty"`
	CnsCidadao                              *string                          `thrift:"cnsCidadao,5" json:"cnsCidadao,omitempty"`
	CnsResponsavelFamiliar                  *string                          `thrift:"cnsResponsavelFamiliar,6" json:"cnsResponsavelFamiliar,omitempty"`
	DataRealizacaoTesteOlhinho              *int64                           `thrift:"dataRealizacaoTesteOlhinho,7" json:"dataRealizacaoTesteOlhinho,omitempty"`
	CoResultadoTesteOlhinho                 *int64                           `thrift:"coResultadoTesteOlhinho,8" json:"coResultadoTesteOlhinho,omitempty"`
	DataRealizacaoExameFundoOlho            *int64                           `thrift:"dataRealizacaoExameFundoOlho,9" json:"dataRealizacaoExameFundoOlho,omitempty"`
	CoResultadoExameFundoOlho               *int64                           `thrift:"coResultadoExameFundoOlho,10" json:"coResultadoExameFundoOlho,omitempty"`
	DataRealizacaoTesteOrelhinha            *int64                           `thrift:"dataRealizacaoTesteOrelhinha,11" json:"dataRealizacaoTesteOrelhinha,omitempty"`
	CoResultadoTesteOrelhinha               *int64                           `thrift:"coResultadoTesteOrelhinha,12" json:"coResultadoTesteOrelhinha,omitempty"`
	DataRealizacaoUSTransfontanela          *int64                           `thrift:"dataRealizacaoUSTransfontanela,13" json:"dataRealizacaoUSTransfontanela,omitempty"`
	CoResultadoUsTransfontanela             *int64                           `thrift:"coResultadoUsTransfontanela,14" json:"coResultadoUsTransfontanela,omitempty"`
	DataRealizacaoTomografiaComputadorizada *int64                           `thrift:"dataRealizacaoTomografiaComputadorizada,15" json:"dataRealizacaoTomografiaComputadorizada,omitempty"`
	CoResultadoTomografiaComputadorizada    *int64                           `thrift:"coResultadoTomografiaComputadorizada,16" json:"coResultadoTomografiaComputadorizada,omitempty"`
	DataRealizacaoRessonanciaMagnetica      *int64                           `thrift:"dataRealizacaoRessonanciaMagnetica,17" json:"dataRealizacaoRessonanciaMagnetica,omitempty"`
	CoResultadoRessonanciaMagnetica         *int64                           `thrift:"coResultadoRessonanciaMagnetica,18" json:"coResultadoRessonanciaMagnetica,omitempty"`
	CpfCidadao                              *string                          `thrift:"cpfCidadao,19" json:"cpfCidadao,omitempty"`
	CpfResponsavelFamiliar                  *string                          `thrift:"cpfResponsavelFamiliar,20" json:"cpfResponsavelFamiliar,omitempty"`
}

func NewFichaComplementarZikaMicrocefaliaThrift() *FichaComplementarZikaMicrocefaliaThrift {
	return &FichaComplementarZikaMicrocefaliaThrift{}
}

var FichaComplementarZikaMicrocefaliaThrift_HeaderTransport_DEFAULT *common.UnicaLotacaoHeaderThrift

func (p *FichaComplementarZikaMicrocefaliaThrift) GetHeaderTransport() *common.UnicaLotacaoHeaderThrift {
	if !p.IsSetHeaderTransport() {
		return FichaComplementarZikaMicrocefaliaThrift_HeaderTransport_DEFAULT
	}
	return p.HeaderTransport
}

func (p *FichaComplementarZikaMicrocefaliaThrift) GetUuidFicha() string {
	return p.UuidFicha
}

var FichaComplementarZikaMicrocefaliaThrift_TpCdsOrigem_DEFAULT int32

func (p *FichaComplementarZikaMicrocefaliaThrift) GetTpCdsOrigem() int32 {
	if !p.IsSetTpCdsOrigem() {
		return FichaComplementarZikaMicrocefaliaThrift_TpCdsOrigem_DEFAULT
	}
	return *p.TpCdsOrigem
}

var FichaComplementarZikaMicrocefaliaThrift_Turno_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetTurno() int64 {
	if !p.IsSetTurno() {
		return FichaComplementarZikaMicrocefaliaThrift_Turno_DEFAULT
	}
	return *p.Turno
}

var FichaComplementarZikaMicrocefaliaThrift_CnsCidadao_DEFAULT string

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCnsCidadao() string {
	if !p.IsSetCnsCidadao() {
		return FichaComplementarZikaMicrocefaliaThrift_CnsCidadao_DEFAULT
	}
	return *p.CnsCidadao
}

var FichaComplementarZikaMicrocefaliaThrift_CnsResponsavelFamiliar_DEFAULT string

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCnsResponsavelFamiliar() string {
	if !p.IsSetCnsResponsavelFamiliar() {
		return FichaComplementarZikaMicrocefaliaThrift_CnsResponsavelFamiliar_DEFAULT
	}
	return *p.CnsResponsavelFamiliar
}

var FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoTesteOlhinho_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetDataRealizacaoTesteOlhinho() int64 {
	if !p.IsSetDataRealizacaoTesteOlhinho() {
		return FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoTesteOlhinho_DEFAULT
	}
	return *p.DataRealizacaoTesteOlhinho
}

var FichaComplementarZikaMicrocefaliaThrift_CoResultadoTesteOlhinho_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCoResultadoTesteOlhinho() int64 {
	if !p.IsSetCoResultadoTesteOlhinho() {
		return FichaComplementarZikaMicrocefaliaThrift_CoResultadoTesteOlhinho_DEFAULT
	}
	return *p.CoResultadoTesteOlhinho
}

var FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoExameFundoOlho_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetDataRealizacaoExameFundoOlho() int64 {
	if !p.IsSetDataRealizacaoExameFundoOlho() {
		return FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoExameFundoOlho_DEFAULT
	}
	return *p.DataRealizacaoExameFundoOlho
}

var FichaComplementarZikaMicrocefaliaThrift_CoResultadoExameFundoOlho_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCoResultadoExameFundoOlho() int64 {
	if !p.IsSetCoResultadoExameFundoOlho() {
		return FichaComplementarZikaMicrocefaliaThrift_CoResultadoExameFundoOlho_DEFAULT
	}
	return *p.CoResultadoExameFundoOlho
}

var FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoTesteOrelhinha_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetDataRealizacaoTesteOrelhinha() int64 {
	if !p.IsSetDataRealizacaoTesteOrelhinha() {
		return FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoTesteOrelhinha_DEFAULT
	}
	return *p.DataRealizacaoTesteOrelhinha
}

var FichaComplementarZikaMicrocefaliaThrift_CoResultadoTesteOrelhinha_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCoResultadoTesteOrelhinha() int64 {
	if !p.IsSetCoResultadoTesteOrelhinha() {
		return FichaComplementarZikaMicrocefaliaThrift_CoResultadoTesteOrelhinha_DEFAULT
	}
	return *p.CoResultadoTesteOrelhinha
}

var FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoUSTransfontanela_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetDataRealizacaoUSTransfontanela() int64 {
	if !p.IsSetDataRealizacaoUSTransfontanela() {
		return FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoUSTransfontanela_DEFAULT
	}
	return *p.DataRealizacaoUSTransfontanela
}

var FichaComplementarZikaMicrocefaliaThrift_CoResultadoUsTransfontanela_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCoResultadoUsTransfontanela() int64 {
	if !p.IsSetCoResultadoUsTransfontanela() {
		return FichaComplementarZikaMicrocefaliaThrift_CoResultadoUsTransfontanela_DEFAULT
	}
	return *p.CoResultadoUsTransfontanela
}

var FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoTomografiaComputadorizada_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetDataRealizacaoTomografiaComputadorizada() int64 {
	if !p.IsSetDataRealizacaoTomografiaComputadorizada() {
		return FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoTomografiaComputadorizada_DEFAULT
	}
	return *p.DataRealizacaoTomografiaComputadorizada
}

var FichaComplementarZikaMicrocefaliaThrift_CoResultadoTomografiaComputadorizada_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCoResultadoTomografiaComputadorizada() int64 {
	if !p.IsSetCoResultadoTomografiaComputadorizada() {
		return FichaComplementarZikaMicrocefaliaThrift_CoResultadoTomografiaComputadorizada_DEFAULT
	}
	return *p.CoResultadoTomografiaComputadorizada
}

var FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoRessonanciaMagnetica_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetDataRealizacaoRessonanciaMagnetica() int64 {
	if !p.IsSetDataRealizacaoRessonanciaMagnetica() {
		return FichaComplementarZikaMicrocefaliaThrift_DataRealizacaoRessonanciaMagnetica_DEFAULT
	}
	return *p.DataRealizacaoRessonanciaMagnetica
}

var FichaComplementarZikaMicrocefaliaThrift_CoResultadoRessonanciaMagnetica_DEFAULT int64

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCoResultadoRessonanciaMagnetica() int64 {
	if !p.IsSetCoResultadoRessonanciaMagnetica() {
		return FichaComplementarZikaMicrocefaliaThrift_CoResultadoRessonanciaMagnetica_DEFAULT
	}
	return *p.CoResultadoRessonanciaMagnetica
}

var FichaComplementarZikaMicrocefaliaThrift_CpfCidadao_DEFAULT string

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCpfCidadao() string {
	if !p.IsSetCpfCidadao() {
		return FichaComplementarZikaMicrocefaliaThrift_CpfCidadao_DEFAULT
	}
	return *p.CpfCidadao
}

var FichaComplementarZikaMicrocefaliaThrift_CpfResponsavelFamiliar_DEFAULT string

func (p *FichaComplementarZikaMicrocefaliaThrift) GetCpfResponsavelFamiliar() string {
	if !p.IsSetCpfResponsavelFamiliar() {
		return FichaComplementarZikaMicrocefaliaThrift_CpfResponsavelFamiliar_DEFAULT
	}
	return *p.CpfResponsavelFamiliar
}
func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetHeaderTransport() bool {
	return p.HeaderTransport != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetTpCdsOrigem() bool {
	return p.TpCdsOrigem != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetTurno() bool {
	return p.Turno != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCnsCidadao() bool {
	return p.CnsCidadao != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCnsResponsavelFamiliar() bool {
	return p.CnsResponsavelFamiliar != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetDataRealizacaoTesteOlhinho() bool {
	return p.DataRealizacaoTesteOlhinho != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCoResultadoTesteOlhinho() bool {
	return p.CoResultadoTesteOlhinho != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetDataRealizacaoExameFundoOlho() bool {
	return p.DataRealizacaoExameFundoOlho != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCoResultadoExameFundoOlho() bool {
	return p.CoResultadoExameFundoOlho != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetDataRealizacaoTesteOrelhinha() bool {
	return p.DataRealizacaoTesteOrelhinha != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCoResultadoTesteOrelhinha() bool {
	return p.CoResultadoTesteOrelhinha != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetDataRealizacaoUSTransfontanela() bool {
	return p.DataRealizacaoUSTransfontanela != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCoResultadoUsTransfontanela() bool {
	return p.CoResultadoUsTransfontanela != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetDataRealizacaoTomografiaComputadorizada() bool {
	return p.DataRealizacaoTomografiaComputadorizada != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCoResultadoTomografiaComputadorizada() bool {
	return p.CoResultadoTomografiaComputadorizada != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetDataRealizacaoRessonanciaMagnetica() bool {
	return p.DataRealizacaoRessonanciaMagnetica != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCoResultadoRessonanciaMagnetica() bool {
	return p.CoResultadoRessonanciaMagnetica != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCpfCidadao() bool {
	return p.CpfCidadao != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) IsSetCpfResponsavelFamiliar() bool {
	return p.CpfResponsavelFamiliar != nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
	}

	var issetUuidFicha bool = false

	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
			issetUuidFicha = true
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.readField11(iprot); err != nil {
				return err
			}
		case 12:
			if err := p.readField12(iprot); err != nil {
				return err
			}
		case 13:
			if err := p.readField13(iprot); err != nil {
				return err
			}
		case 14:
			if err := p.readField14(iprot); err != nil {
				return err
			}
		case 15:
			if err := p.readField15(iprot); err != nil {
				return err
			}
		case 16:
			if err := p.readField16(iprot); err != nil {
				return err
			}
		case 17:
			if err := p.readField17(iprot); err != nil {
				return err
			}
		case 18:
			if err := p.readField18(iprot); err != nil {
				return err
			}
		case 19:
			if err := p.readField19(iprot); err != nil {
				return err
			}
		case 20:
			if err := p.readField20(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
	}
	if !issetUuidFicha {
		return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field UuidFicha is not set"))
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField1(iprot thrift.TProtocol) error {
	p.HeaderTransport = &common.UnicaLotacaoHeaderThrift{}
	if err := p.HeaderTransport.Read(iprot); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T error reading struct: ", p.HeaderTransport), err)
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 2: ", err)
	} else {
		p.UuidFicha = v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return thrift.PrependError("error reading field 3: ", err)
	} else {
		p.TpCdsOrigem = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 4: ", err)
	} else {
		p.Turno = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 5: ", err)
	} else {
		p.CnsCidadao = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 6: ", err)
	} else {
		p.CnsResponsavelFamiliar = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 7: ", err)
	} else {
		p.DataRealizacaoTesteOlhinho = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 8: ", err)
	} else {
		p.CoResultadoTesteOlhinho = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 9: ", err)
	} else {
		p.DataRealizacaoExameFundoOlho = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 10: ", err)
	} else {
		p.CoResultadoExameFundoOlho = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 11: ", err)
	} else {
		p.DataRealizacaoTesteOrelhinha = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField12(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 12: ", err)
	} else {
		p.CoResultadoTesteOrelhinha = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField13(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 13: ", err)
	} else {
		p.DataRealizacaoUSTransfontanela = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField14(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 14: ", err)
	} else {
		p.CoResultadoUsTransfontanela = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField15(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 15: ", err)
	} else {
		p.DataRealizacaoTomografiaComputadorizada = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField16(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 16: ", err)
	} else {
		p.CoResultadoTomografiaComputadorizada = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField17(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 17: ", err)
	} else {
		p.DataRealizacaoRessonanciaMagnetica = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField18(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return thrift.PrependError("error reading field 18: ", err)
	} else {
		p.CoResultadoRessonanciaMagnetica = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField19(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 19: ", err)
	} else {
		p.CpfCidadao = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) readField20(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return thrift.PrependError("error reading field 20: ", err)
	} else {
		p.CpfResponsavelFamiliar = &v
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("FichaComplementarZikaMicrocefaliaThrift"); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := p.writeField12(oprot); err != nil {
		return err
	}
	if err := p.writeField13(oprot); err != nil {
		return err
	}
	if err := p.writeField14(oprot); err != nil {
		return err
	}
	if err := p.writeField15(oprot); err != nil {
		return err
	}
	if err := p.writeField16(oprot); err != nil {
		return err
	}
	if err := p.writeField17(oprot); err != nil {
		return err
	}
	if err := p.writeField18(oprot); err != nil {
		return err
	}
	if err := p.writeField19(oprot); err != nil {
		return err
	}
	if err := p.writeField20(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return thrift.PrependError("write field stop error: ", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return thrift.PrependError("write struct stop error: ", err)
	}
	return nil
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetHeaderTransport() {
		if err := oprot.WriteFieldBegin("headerTransport", thrift.STRUCT, 1); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:headerTransport: ", p), err)
		}
		if err := p.HeaderTransport.Write(oprot); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T error writing struct: ", p.HeaderTransport), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 1:headerTransport: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("uuidFicha", thrift.STRING, 2); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:uuidFicha: ", p), err)
	}
	if err := oprot.WriteString(string(p.UuidFicha)); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T.uuidFicha (2) field write error: ", p), err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return thrift.PrependError(fmt.Sprintf("%T write field end error 2:uuidFicha: ", p), err)
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetTpCdsOrigem() {
		if err := oprot.WriteFieldBegin("tpCdsOrigem", thrift.I32, 3); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 3:tpCdsOrigem: ", p), err)
		}
		if err := oprot.WriteI32(int32(*p.TpCdsOrigem)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.tpCdsOrigem (3) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 3:tpCdsOrigem: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetTurno() {
		if err := oprot.WriteFieldBegin("turno", thrift.I64, 4); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 4:turno: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.Turno)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.turno (4) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 4:turno: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetCnsCidadao() {
		if err := oprot.WriteFieldBegin("cnsCidadao", thrift.STRING, 5); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 5:cnsCidadao: ", p), err)
		}
		if err := oprot.WriteString(string(*p.CnsCidadao)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.cnsCidadao (5) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 5:cnsCidadao: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetCnsResponsavelFamiliar() {
		if err := oprot.WriteFieldBegin("cnsResponsavelFamiliar", thrift.STRING, 6); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 6:cnsResponsavelFamiliar: ", p), err)
		}
		if err := oprot.WriteString(string(*p.CnsResponsavelFamiliar)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.cnsResponsavelFamiliar (6) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 6:cnsResponsavelFamiliar: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataRealizacaoTesteOlhinho() {
		if err := oprot.WriteFieldBegin("dataRealizacaoTesteOlhinho", thrift.I64, 7); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 7:dataRealizacaoTesteOlhinho: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DataRealizacaoTesteOlhinho)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dataRealizacaoTesteOlhinho (7) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 7:dataRealizacaoTesteOlhinho: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetCoResultadoTesteOlhinho() {
		if err := oprot.WriteFieldBegin("coResultadoTesteOlhinho", thrift.I64, 8); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 8:coResultadoTesteOlhinho: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.CoResultadoTesteOlhinho)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.coResultadoTesteOlhinho (8) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 8:coResultadoTesteOlhinho: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataRealizacaoExameFundoOlho() {
		if err := oprot.WriteFieldBegin("dataRealizacaoExameFundoOlho", thrift.I64, 9); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 9:dataRealizacaoExameFundoOlho: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DataRealizacaoExameFundoOlho)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dataRealizacaoExameFundoOlho (9) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 9:dataRealizacaoExameFundoOlho: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetCoResultadoExameFundoOlho() {
		if err := oprot.WriteFieldBegin("coResultadoExameFundoOlho", thrift.I64, 10); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 10:coResultadoExameFundoOlho: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.CoResultadoExameFundoOlho)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.coResultadoExameFundoOlho (10) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 10:coResultadoExameFundoOlho: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataRealizacaoTesteOrelhinha() {
		if err := oprot.WriteFieldBegin("dataRealizacaoTesteOrelhinha", thrift.I64, 11); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 11:dataRealizacaoTesteOrelhinha: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DataRealizacaoTesteOrelhinha)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dataRealizacaoTesteOrelhinha (11) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 11:dataRealizacaoTesteOrelhinha: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField12(oprot thrift.TProtocol) (err error) {
	if p.IsSetCoResultadoTesteOrelhinha() {
		if err := oprot.WriteFieldBegin("coResultadoTesteOrelhinha", thrift.I64, 12); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 12:coResultadoTesteOrelhinha: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.CoResultadoTesteOrelhinha)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.coResultadoTesteOrelhinha (12) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 12:coResultadoTesteOrelhinha: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField13(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataRealizacaoUSTransfontanela() {
		if err := oprot.WriteFieldBegin("dataRealizacaoUSTransfontanela", thrift.I64, 13); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 13:dataRealizacaoUSTransfontanela: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DataRealizacaoUSTransfontanela)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dataRealizacaoUSTransfontanela (13) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 13:dataRealizacaoUSTransfontanela: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField14(oprot thrift.TProtocol) (err error) {
	if p.IsSetCoResultadoUsTransfontanela() {
		if err := oprot.WriteFieldBegin("coResultadoUsTransfontanela", thrift.I64, 14); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 14:coResultadoUsTransfontanela: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.CoResultadoUsTransfontanela)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.coResultadoUsTransfontanela (14) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 14:coResultadoUsTransfontanela: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField15(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataRealizacaoTomografiaComputadorizada() {
		if err := oprot.WriteFieldBegin("dataRealizacaoTomografiaComputadorizada", thrift.I64, 15); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 15:dataRealizacaoTomografiaComputadorizada: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DataRealizacaoTomografiaComputadorizada)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dataRealizacaoTomografiaComputadorizada (15) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 15:dataRealizacaoTomografiaComputadorizada: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField16(oprot thrift.TProtocol) (err error) {
	if p.IsSetCoResultadoTomografiaComputadorizada() {
		if err := oprot.WriteFieldBegin("coResultadoTomografiaComputadorizada", thrift.I64, 16); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 16:coResultadoTomografiaComputadorizada: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.CoResultadoTomografiaComputadorizada)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.coResultadoTomografiaComputadorizada (16) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 16:coResultadoTomografiaComputadorizada: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField17(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataRealizacaoRessonanciaMagnetica() {
		if err := oprot.WriteFieldBegin("dataRealizacaoRessonanciaMagnetica", thrift.I64, 17); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 17:dataRealizacaoRessonanciaMagnetica: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.DataRealizacaoRessonanciaMagnetica)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.dataRealizacaoRessonanciaMagnetica (17) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 17:dataRealizacaoRessonanciaMagnetica: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField18(oprot thrift.TProtocol) (err error) {
	if p.IsSetCoResultadoRessonanciaMagnetica() {
		if err := oprot.WriteFieldBegin("coResultadoRessonanciaMagnetica", thrift.I64, 18); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 18:coResultadoRessonanciaMagnetica: ", p), err)
		}
		if err := oprot.WriteI64(int64(*p.CoResultadoRessonanciaMagnetica)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.coResultadoRessonanciaMagnetica (18) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 18:coResultadoRessonanciaMagnetica: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField19(oprot thrift.TProtocol) (err error) {
	if p.IsSetCpfCidadao() {
		if err := oprot.WriteFieldBegin("cpfCidadao", thrift.STRING, 19); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 19:cpfCidadao: ", p), err)
		}
		if err := oprot.WriteString(string(*p.CpfCidadao)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.cpfCidadao (19) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 19:cpfCidadao: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) writeField20(oprot thrift.TProtocol) (err error) {
	if p.IsSetCpfResponsavelFamiliar() {
		if err := oprot.WriteFieldBegin("cpfResponsavelFamiliar", thrift.STRING, 20); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field begin error 20:cpfResponsavelFamiliar: ", p), err)
		}
		if err := oprot.WriteString(string(*p.CpfResponsavelFamiliar)); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T.cpfResponsavelFamiliar (20) field write error: ", p), err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return thrift.PrependError(fmt.Sprintf("%T write field end error 20:cpfResponsavelFamiliar: ", p), err)
		}
	}
	return err
}

func (p *FichaComplementarZikaMicrocefaliaThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("FichaComplementarZikaMicrocefaliaThrift(%+v)", *p)
}
